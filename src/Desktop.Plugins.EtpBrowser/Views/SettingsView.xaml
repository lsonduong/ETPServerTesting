<UserControl x:Class="PDS.WITSMLstudio.Desktop.Plugins.EtpBrowser.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:conv="clr-namespace:PDS.WITSMLstudio.Desktop.Core.Converters;assembly=PDS.WITSMLstudio.Desktop.Core"
             mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="1000">

    <UserControl.Resources>
        <conv:NullToBooleanConverter x:Key="NullToBooleanConverter" />
        <conv:BooleanInverseConverter x:Key="BooleanInverseConverter" />
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <GridLength x:Key="TextBoxRowHeight">38</GridLength>
        <GridLength x:Key="CheckBoxRowHeight">30</GridLength>
        <GridLength x:Key="SeparatorRowHeight">20</GridLength>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="400" />
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="88" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Role:" Margin="0,10,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="16" Width="26" />
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="0,5,0,0">
                <RadioButton Content="Client" Margin="10,0,0,0" VerticalAlignment="Center" IsChecked="{Binding Model.IsEtpClient}" Height="21" />
                <RadioButton Content="Server" Margin="30,0,0,0" VerticalAlignment="Center" IsChecked="{Binding Model.IsEtpClient, Converter={StaticResource BooleanInverseConverter}}" Height="21" />
            </StackPanel>

            <Label Grid.Column="3" FontWeight="Bold" FontSize="16" Margin="2,4,-2,36" Grid.RowSpan="2">Streaming Options:</Label>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Connection:" Margin="22,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}}" Height="16" Width="63" />
            <ContentControl Grid.Row="1" Grid.Column="1" Margin="5,5,5,5" x:Name="ConnectionPicker" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Port Number:" Margin="14,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}" Height="16" Width="71" />
            <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Value="{Binding Model.PortNumber}" Minimum="0" Maximum="65535" Margin="5,5,5,5" Padding="5" VerticalContentAlignment="Center" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}" />

            <TextBlock Grid.Row="2" Grid.Column="0" Text="App Name:" Margin="26,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="59" />
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Model.ApplicationName}" Margin="5,5,223,5" Padding="5" VerticalContentAlignment="Center"/>

            <TextBlock Grid.Row="2" Grid.Column="1" Text="App Version:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="66" Margin="182,0,0,0" />
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Model.ApplicationVersion}" Margin="254,5,5,5" Padding="5" VerticalContentAlignment="Center" />

            <TextBlock Grid.Row="7" Grid.Column="2" Text="Channels:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="66" Margin="18,0,0,0" />
            <CheckBox x:Name="RandomCheckbox" Grid.Row="7" Grid.Column="3" Content="Random" IsChecked="{Binding IsRandomChannel}" Margin="5,12,0,0" />
            <Button  Grid.Row="8" Grid.Column="2" x:Name="Describe" Content="Describe" IsEnabled="{Binding CanDescribe}" Margin="17,5,17,15" 
                     Visibility="{Binding IsChecked, ElementName=RandomCheckbox, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"/>
            <DataGrid Grid.Row="8" Grid.Column="3" Style="{StaticResource DefaultGridStyle}" AutoGenerateColumns="False" FrozenColumnCount="1"
                      ItemsSource="{Binding Channels}" SelectedItem="{Binding SelectedChannel, Mode=TwoWay}" Grid.RowSpan="4" 
                      Visibility="{Binding IsChecked, ElementName=RandomCheckbox, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="40" CanUserResize="False">
                        <DataGridTemplateColumn.Header>
                            <CheckBox cal:Message.Attach="OnChannelSelection($this)" ToolTip="Toggle channel selection"/>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="ID" Width="50" Binding="{Binding Record.ChannelId}" />
                    <DataGridTextColumn Header="Name" Binding="{Binding Record.ChannelName}" />
                    <DataGridTextColumn Header="Unit" Binding="{Binding Record.Uom}" />
                    <DataGridTextColumn Header="Data Type" Binding="{Binding Record.DataType}" />
                    <DataGridTemplateColumn Header="Notify?" CanUserResize="True" SortMemberPath="ReceiveChangeNotification">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="ToolTip" Value="Receive change notifications" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=ReceiveChangeNotification, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Index Name" Binding="{Binding Record.Indexes[0].Mnemonic}" />
                    <DataGridTextColumn Header="Index Unit" Binding="{Binding Record.Indexes[0].Uom}" />
                    <DataGridTextColumn Header="Index Type" Binding="{Binding Record.Indexes[0].IndexType}" />
                </DataGrid.Columns>
                <DataGrid.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding ToggleChannelCommand}" />
                    <KeyBinding Key="Space" Command="{Binding ToggleChannelCommand}" />
                </DataGrid.InputBindings>
            </DataGrid>

            <TextBlock Grid.Row="1" Grid.Column="2" Text="Request Range:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="86" Margin="5,12,0,0" Grid.ColumnSpan="2" />
            <CheckBox Grid.Row="1" Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" IsChecked="{Binding IsRangeRequest}" RenderTransformOrigin="4.207,-9.981" />

            <TextBlock Grid.Row="2" Grid.Column="2" Text="URI:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center" />
            <TextBox Text="{Binding Model.Streaming.Uri}" Grid.Column="3" Grid.Row="2" Margin="5,5,45,5" Padding="5" VerticalContentAlignment="Center" />
            <Button x:Name="AddUri" Grid.Row="2" Grid.Column="3" Content="Add" Width="40" HorizontalAlignment="Left" Margin="360,5,0,5" />

            <TextBlock Grid.Row="3" Grid.Column="2" Text="URI List:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Top" />
            <ListBox Grid.Row="3" Grid.Column="3" Margin="5,0,0,5" ItemsSource="{Binding Model.Streaming.Uris}"
                     cal:Message.Attach="[Event KeyUp] = [Action OnKeyUp($source, $eventArgs)]" />

            <StackPanel Grid.Row="3" Grid.Column="0" Margin="0,12,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="58" Width="56">
                <TextBlock Text="Requested" HorizontalAlignment="Right" Margin="0,0,0,5" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBlock Text="Supported" HorizontalAlignment="Right" Margin="0,0,0,5" Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}" />
                <TextBlock Text="Protocols:" HorizontalAlignment="Right" />
            </StackPanel>
            <ListBox Grid.Row="3" Grid.Column="1" Margin="0,5,0,5" ItemsSource="{Binding EtpProtocols}" HorizontalAlignment="Center" Width="390">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding IsSelected, Mode=TwoWay}" IsEnabled="{Binding IsEnabled}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <StackPanel Grid.Row="4" Grid.Column="1" Margin="5,5,0,5" Orientation="Horizontal" HorizontalAlignment="Left" Width="70">
                <Button x:Name="ClearSelectedProtocols" Content="Clear All" Width="68" Height="23" />
            </StackPanel>

            <StackPanel Grid.Row="4" Grid.Column="1" Margin="200,5,0,5" Orientation="Horizontal" HorizontalAlignment="Left"
                        IsEnabled="{Binding Model.Connection.Uri, Converter={StaticResource NullToBooleanConverter}}"
                        Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}}" Width="210">

                <Button x:Name="RequestSession" Content="Request Session" Margin="5,0,0,0" Width="93" Height="23" />
                <Button x:Name="CloseSession" Content="Close Session" Margin="5,0,0,0" Width="80" Height="23" />
            </StackPanel>

            <StackPanel Grid.Row="4" Grid.Column="1" Margin="210,5,0,5" Orientation="Horizontal" HorizontalAlignment="Left"
                        IsEnabled="{Binding Model.PortNumber, Converter={StaticResource NullToBooleanConverter}}"
                        Visibility="{Binding Model.IsEtpClient, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}" Width="210">
                <Button x:Name="StartServer" Content="Start Server" Width="86" Height="22" />
                <Button x:Name="StopServer" Content="Stop Server" Margin="5,0,0,0" Width="85" Height="23" />
            </StackPanel>

            <StackPanel Grid.Row="13" Grid.Column="1" Margin="5,5,0,5" Orientation="Horizontal" HorizontalAlignment="Left" Width="70">
                <Button x:Name="SaveInputs" Content="Save Inputs" Width="70"/>
            </StackPanel>

            <StackPanel Grid.Row="5" Grid.Column="0" Margin="0,12,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="68" Width="63" Grid.RowSpan="2">
                <TextBlock Text="Params Set:" HorizontalAlignment="Right" Margin="0,0,0,5" Width="63" />
                <Button x:Name="AddRow" Content="Add" Width="50"/>
                <Separator Height="2" Background="Transparent"/>
                <Button x:Name="DeleteRow" Content="Delete" Width="50"/>
            </StackPanel>

            <DataGrid Grid.Column="1" Grid.Row="5" ItemsSource="{Binding ParamList}" Margin="5,2,5,0" Grid.RowSpan="6" Name="ParamsGrid" AutoGenerateColumns="False" CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Parameter" Width="180">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Margin="2" ItemsSource="{Binding Name}" SelectedItem="{Binding SelectedName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Grid.Column="2" Grid.Row="4" Orientation="Horizontal" VerticalAlignment="Center" Height="20" Margin="74,0,0,0" Grid.ColumnSpan="2">
                <RadioButton x:Name="LatestValueButton" Content="Latest Value" IsChecked="True" Margin="20,0,0,0" cal:Message.Attach="SetStreamingType('LatestValue')" />
                <RadioButton x:Name="IndexCountButton" Content="Index Count" Margin="20,0,0,0" cal:Message.Attach="SetStreamingType('IndexCount')" />
                <RadioButton x:Name="TimeIndexButton" Content="Time Index" Margin="20,0,0,0" cal:Message.Attach="SetStreamingType('TimeIndex')" />
                <RadioButton x:Name="DepthIndexButton" Content="Depth Index" Margin="20,0,0,0" cal:Message.Attach="SetStreamingType('DepthIndex')" />
            </StackPanel>

            <TextBlock Grid.Row="5" Grid.Column="2" Text="Index Count:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center"
                   Visibility="{Binding IsChecked, ElementName=IndexCountButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <xctk:IntegerUpDown Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2" Margin="5" Padding="5" VerticalContentAlignment="Center"
                            Visibility="{Binding IsChecked, ElementName=IndexCountButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Value="{Binding Model.Streaming.IndexCount}" Minimum="1" Maximum="100000"/>

            <TextBlock Grid.Row="5" Grid.Column="2" Text="Start Index:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center"
                   Visibility="{Binding IsChecked, ElementName=DepthIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <xctk:DoubleUpDown Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2" Margin="5" Padding="5" VerticalContentAlignment="Center"
                         Visibility="{Binding IsChecked, ElementName=DepthIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                         Value="{Binding Model.Streaming.StartIndex}" />

            <TextBlock Grid.Row="6" Grid.Column="2" Text="End Index:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center"
                   Visibility="{Binding IsChecked, ElementName=DepthIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <xctk:DoubleUpDown Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="2" Margin="5" Padding="5" VerticalContentAlignment="Center" 
                         Visibility="{Binding IsChecked, ElementName=DepthIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                         Value="{Binding Model.Streaming.EndIndex}" />

            <TextBlock Grid.Row="5" Grid.Column="2" Text="Start Time:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center"
                   Visibility="{Binding IsChecked, ElementName=TimeIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <xctk:DateTimePicker Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2" Margin="5" Padding="5" VerticalContentAlignment="Center"
                             Visibility="{Binding IsChecked, ElementName=TimeIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Value="{Binding Model.Streaming.StartTime}" Kind="Utc" ShowButtonSpinner="False" Format="UniversalSortableDateTime" TimeFormat="LongTime" />

            <TextBlock Grid.Row="6" Grid.Column="2" Text="End Time:" Margin="10,5,5,5" HorizontalAlignment="Right" VerticalAlignment="Center"
                   Visibility="{Binding IsChecked, ElementName=TimeIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <xctk:DateTimePicker Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="2" Margin="5" Padding="5" VerticalContentAlignment="Center"
                             Visibility="{Binding IsChecked, ElementName=TimeIndexButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Value="{Binding Model.Streaming.EndTime}" Kind="Utc" ShowButtonSpinner="False" Format="UniversalSortableDateTime" TimeFormat="LongTime" />
        </Grid>
    </ScrollViewer>
</UserControl>
